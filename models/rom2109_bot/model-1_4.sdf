<?xml version='1.0'?>
<sdf version="1.4">
  <model name='rom2109_bot'>
      <link name='base_link'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <inertial>
          <pose frame=''>-0.003697 -0.000156 0.064108 0 -0 0</pose>
          <mass>5.86205</mass>
          <inertia>
            <ixx>0.0424768</ixx>
            <ixy>4.62916e-05</ixy>
            <ixz>0.00313742</ixz>
            <iyy>0.0431243</iyy>
            <iyz>-3.71318e-05</iyz>
            <izz>0.0513862</izz>
          </inertia>
        </inertial>
        <collision name='base_link_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/base_link.STL</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_fixed_joint_lump__frame_link_collision_1'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/frame_link.STL</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_fixed_joint_lump__rp_lidar_collision_2'>
          <pose frame=''>-0.016132 -3.6e-05 0.20083 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/rp_lidar.STL</uri>
            </mesh>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
              <torsional>
                <ode/>
              </torsional>
            </friction>
            <bounce/>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <collision name='base_link_fixed_joint_lump__wifi_collision_3'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/wifi.STL</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='base_link_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/base_link.STL</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_fixed_joint_lump__frame_link_visual_1'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/frame_link.STL</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Orange</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>
        <visual name='base_link_fixed_joint_lump__rp_lidar_visual_2'>
          <pose frame=''>-0.016132 -3.6e-05 0.20083 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/rp_lidar.STL</uri>
            </mesh>
          </geometry>
          <material>
            <script>
              <uri>__default__</uri>
              <name>__default__</name>
            </script>
          </material>
        </visual>
        <visual name='base_link_fixed_joint_lump__wifi_visual_3'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/wifi.STL</uri>
            </mesh>
          </geometry>
        </visual>
        <velocity_decay/>
        <velocity_decay/>
        <gravity>1</gravity>
        <velocity_decay/>
        <sensor name="hls_lfcd_lds" type="ray">
                <always_on>true</always_on>
                <visualize>true</visualize>
                <pose>-0.064 0 0.242 0 0 0</pose>
                <update_rate>5</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <resolution>1.000000</resolution>
                            <min_angle>0.000000</min_angle>
                            <max_angle>6.280000</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.130000</min>
                        <max>30</max>
                        <resolution>0.01000</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="amazon_robot_laserscan" filename="libgazebo_ros_ray_sensor.so">
                    <ros>
                        <!-- <namespace>/tb3</namespace> -->
                        <remapping>~/out:=scan</remapping>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>rp_lidar</frame_name>
                </plugin>
                <pose frame=''>-0.016132 -3.6e-05 0.20083 0 -0 0</pose>
        </sensor>
        <sensor type="camera" name="camera1">
          <update_rate>30.0</update_rate>
          <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rp_lidar</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
          <pose frame=''>-0.03 -3.6e-05 0.5 0 -0 0</pose>
        </sensor>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <link name='left_wheel'>
        <pose frame=''>0 0.098333 0.02605 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 4.3e-05 0 0 -0 0</pose>
          <mass>2.8826</mass>
          <inertia>
            <ixx>0.0029015</ixx>
            <ixy>-2.7371e-19</ixy>
            <ixz>-1.4432e-19</ixz>
            <iyy>0.00525</iyy>
            <iyz>6.1539e-21</iyz>
            <izz>0.0029015</izz>
          </inertia>
        </inertial>
        <collision name='left_wheel_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/left_wheel.STL</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='left_wheel_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/left_wheel.STL</uri>
            </mesh>
          </geometry>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='left_wheel_joint' type='revolute'>
        <child>left_wheel</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
          <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
      </joint>
      <link name='right_wheel'>
        <pose frame=''>0 -0.098333 0.02605 0 -0 0</pose>
        <inertial>
          <pose frame=''>0 4.3e-05 -0 0 -0 0</pose>
          <mass>2.8826</mass>
          <inertia>
            <ixx>0.0029015</ixx>
            <ixy>1.8806e-19</ixy>
            <ixz>-1.5661e-19</ixz>
            <iyy>0.00525</iyy>
            <iyz>9.7374e-20</iyz>
            <izz>0.0029015</izz>
          </inertia>
        </inertial>
        <collision name='right_wheel_collision'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/right_wheel.STL</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='right_wheel_visual'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <mesh>
              <scale>1 1 1</scale>
              <uri>model://rom2109_bot/meshes/bot/right_wheel.STL</uri>
            </mesh>
          </geometry>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='right_wheel_joint' type='revolute'>
        <child>right_wheel</child>
        <parent>base_link</parent>
        <axis>
          <xyz>0 1 0</xyz>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
          <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
      </joint>
      <plugin name='gazebo_ros_control' filename='libgazebo_ros_contol.so'>
        <robotNamespace>/</robotNamespace>
      </plugin>
      <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>20</update_rate>
        <joint_name>left_wheel_joint</joint_name>
        <joint_name>right_wheel_joint</joint_name>
      </plugin>
      <static>0</static>
      <plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
        <alwaysOn>1</alwaysOn>
        <updateRate>10.0</updateRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <publishWheelTF>1</publishWheelTF>
        <publishWheelJointState>1</publishWheelJointState>
        <wheelAcceleration>1</wheelAcceleration>
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.33</wheel_separation>
        <wheel_diameter>0.17</wheel_diameter>
        <wheelTorque>20</wheelTorque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotNamespace>/</robotNamespace>
      </plugin>
      <pose frame=''>0 0 0 0 -0 0</pose>
    </model>
</sdf>
